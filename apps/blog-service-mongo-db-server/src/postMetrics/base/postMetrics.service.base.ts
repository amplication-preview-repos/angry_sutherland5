/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, PostMetrics as PrismaPostMetrics } from "@prisma/client";

export class PostMetricsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PostMetricsCountArgs, "select">
  ): Promise<number> {
    return this.prisma.postMetrics.count(args);
  }

  async postMetricsItems<T extends Prisma.PostMetricsFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostMetricsFindManyArgs>
  ): Promise<PrismaPostMetrics[]> {
    return this.prisma.postMetrics.findMany<Prisma.PostMetricsFindManyArgs>(
      args
    );
  }
  async postMetrics<T extends Prisma.PostMetricsFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostMetricsFindUniqueArgs>
  ): Promise<PrismaPostMetrics | null> {
    return this.prisma.postMetrics.findUnique(args);
  }
  async createPostMetrics<T extends Prisma.PostMetricsCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostMetricsCreateArgs>
  ): Promise<PrismaPostMetrics> {
    return this.prisma.postMetrics.create<T>(args);
  }
  async updatePostMetrics<T extends Prisma.PostMetricsUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostMetricsUpdateArgs>
  ): Promise<PrismaPostMetrics> {
    return this.prisma.postMetrics.update<T>(args);
  }
  async deletePostMetrics<T extends Prisma.PostMetricsDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.PostMetricsDeleteArgs>
  ): Promise<PrismaPostMetrics> {
    return this.prisma.postMetrics.delete(args);
  }
}
